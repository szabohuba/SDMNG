@model SDMNG.Models.Stop

@{
    ViewData["Title"] = "Stop Details";
}

<!-- Leaflet CSS & JS -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js"></script>

<h2>@ViewData["Title"]</h2>

<div class="card shadow p-4">
    <div class="mb-3">
        <label class="form-label">Stop Name</label>
        <input class="form-control" value="@Model.StopName" readonly />
    </div>

    <div class="mb-3">
        <label class="form-label">Latitude</label>
        <input class="form-control" value="@Model.Latitude" readonly />
    </div>

    <div class="mb-3">
        <label class="form-label">Longitude</label>
        <input class="form-control" value="@Model.Longitude" readonly />
    </div>

    <div class="mb-4">
        <label class="form-label">Map Location</label>
        <div id="stopMap" style="height: 400px;" class="rounded shadow-sm border"></div>
    </div>

    <div class="d-flex justify-content-end">
        <a asp-action="UserStops" class="btn btn-secondary">Back to List</a>
    </div>
</div>

<script>
    var lat = @Html.Raw(Model.Latitude.ToString().Replace(',', '.'));
    var lng = @Html.Raw(Model.Longitude.ToString().Replace(',', '.'));

    //console.log("Latitude: " + lat);  
   // console.log("Longitude: " + lng);  

    // Check if lat/lng are valid numbers
    if (!isNaN(lat) && !isNaN(lng)) {
        // Initialize the map centered at the stop's location
        var map = L.map('stopMap').setView([lat, lng], 15);

        // Add the tile layer (OpenStreetMap tiles)
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            maxZoom: 18
        }).addTo(map);

        // Add a marker at the stop's location
        L.marker([lat, lng])
            .addTo(map)
            .bindPopup("<strong>@Model.StopName</strong>")
            .openPopup();
    } else {
        console.error("Invalid coordinates for the map.");
    }
</script>
